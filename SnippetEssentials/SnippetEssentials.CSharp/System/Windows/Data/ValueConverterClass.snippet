<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0.-->
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>ValueConverter Class</Title>
            <Shortcut>_valueconverter</Shortcut>
            <Description>Public class that implements IValueConverter.</Description>
            <Author>Josef Pihrt</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
        </Header>
        <Snippet>
            <Imports>
                <Import>
                    <Namespace>System</Namespace>
                </Import>
                <Import>
                    <Namespace>System.Globalization</Namespace>
                </Import>
                <Import>
                    <Namespace>System.Windows.Data</Namespace>
                </Import>
            </Imports>
            <Declarations>
                <Literal>
                    <ID>modifier</ID>
                    <ToolTip>Access modifier</ToolTip>
                    <Default>public</Default>
                </Literal>
                <Literal>
                    <ID>name</ID>
                    <ToolTip>Converter name</ToolTip>
                    <Default>My</Default>
                </Literal>
                <Literal>
                    <ID>sourcetype</ID>
                    <ToolTip>Source type</ToolTip>
                    <Default>object</Default>
                </Literal>
                <Literal>
                    <ID>targettype</ID>
                    <ToolTip>Target type</ToolTip>
                    <Default>object</Default>
                </Literal>
            </Declarations>
            <Code Language="CSharp"><![CDATA[[ValueConversion(typeof($sourcetype$), typeof($targettype$))]
$modifier$ class $name$Converter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotSupportedException();
        $end$
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        throw new NotSupportedException();
    }
}]]></Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>