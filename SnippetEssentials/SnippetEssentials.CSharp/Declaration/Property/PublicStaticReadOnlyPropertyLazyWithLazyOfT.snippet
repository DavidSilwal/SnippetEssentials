<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0.-->
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
    <CodeSnippet Format="1.0.0">
        <Header>
            <Title>Public Static Read-only Property with Lazy Initialization using Lazy&lt;T&gt;</Title>
            <Shortcut>srply</Shortcut>
            <Description>Public static read-only property with lazy initialization using Lazy&lt;T&gt;.</Description>
            <Author>Josef Pihrt</Author>
            <SnippetTypes>
                <SnippetType>Expansion</SnippetType>
            </SnippetTypes>
            <Keywords>
                <Keyword>NonUniqueShortcut</Keyword>
            </Keywords>
        </Header>
        <Snippet>
            <Imports>
                <Import>
                    <Namespace>System</Namespace>
                </Import>
            </Imports>
            <Declarations>
                <Literal Editable="false">
                    <ID>_fieldprefix</ID>
                    <Default>_</Default>
                </Literal>
                <Literal>
                    <ID>_propertytype</ID>
                    <ToolTip>Property type</ToolTip>
                    <Default>string</Default>
                </Literal>
                <Literal>
                    <ID>lazyThreadSafetyMode</ID>
                    <ToolTip>LazyThreadSafetyMode</ToolTip>
                    <Default>.ExecutionAndPublication</Default>
                </Literal>
                <Literal>
                    <ID>property</ID>
                    <ToolTip>Property name</ToolTip>
                    <Default>PropertyName</Default>
                </Literal>
                <Literal>
                    <ID>valueFactory</ID>
                    <ToolTip>Value factory</ToolTip>
                    <Default>() =&gt; </Default>
                </Literal>
            </Declarations>
            <Code Language="CSharp"><![CDATA[private static readonly Lazy<$_propertytype$> $_fieldprefix$lazy$property$ = new Lazy<$_propertytype$>($valueFactory$, LazyThreadSafetyMode$lazyThreadSafetyMode$);

public static $_propertytype$ $property$
{
    get { return $_fieldprefix$lazy$property$.Value; }
}$end$]]></Code>
        </Snippet>
    </CodeSnippet>
</CodeSnippets>